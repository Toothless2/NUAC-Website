<div class='records'>
  <style>
  .hidden {
    display: none;
  }
  </style>

  <h1>Records</h1>
  <div class='search-form'>
    <%= render 'search' %>
  </div>
  <div class='records-table'>
    <table>
      <thead>
        <tr>
          <th>Archer</th>
          <th>Score</th>
          <th>Round</th>
          <th>Bowstyle</th>
          <th>Date</th>
          <th>Academic Year</th>
          <th>Gender</th>
        </tr>
      </thead>
      <tbody>
        <tr></tr> <!-- Needs to be here or the table gets funky -->
        <% @records.each do |record| %>
          <%= render partial: 'recorddispaly', locals: { record: record} %>
        <%end%>
      </tbody>
    </table>
  </div>

  <% if user_signed_in? %>
    <div class='new-form'>
      <%= render 'form' %>
    </div>
  <% end %>
</div>

<script>
const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;

const comparer = (idx, asc) => (a, b) => ((v1, v2) => 
    v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

// do the work...
document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
    const table = th.closest('table');
    Array.from(table.querySelectorAll('tr:nth-child(n+2)'))
        .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
        .forEach(tr => table.appendChild(tr) );
})));

function duplicate_hide()
{
  var table_rows = document.querySelectorAll('tbody tr');

  var unique = {};
  var selection = ["Archer", "Round", "Score"];

  for (row of table_rows)
  {
    if(row.innerText == "")
    {
      continue;
    }

    var temp = [];
    for (select of selection)
    {
      temp.push(row.querySelector(`td[title="${select}"]`));
    }
  
    // Destructuring assignment
    var [the_name, the_round, the_score] = temp;

    the_name = the_name.innerText;
    the_round = the_round.innerHTML;
    the_score = the_score.innerHTML == "&nbsp;" ? 0 : the_score.innerHTML;

    if (the_name in unique && the_round in unique[the_name])
    {
      //same test, saved score is lower than current score, hide previous row
      if (+unique[the_name][the_round].score < +the_score)
      {
        unique[the_name][the_round].row.className = "hidden";
        unique[the_name][the_round].score = the_score;
        unique[the_name][the_round].row = row;
      }
      else
      {
        row.className = "hidden";
      }
    }
    else
    {
      // Create new object if it doesn't exist on name
      if (!(the_name in unique))
      {
        unique[the_name] = {};
      }
      unique[the_name][the_round] = {score: the_score, row};
    }
  }
}

function duplicate_show()
{
  var table_rows = document.querySelectorAll('tbody tr');
  for (row of table_rows)
  {
    row.className = "";
  }
}

function duplicate_check(event)
{
  if (event.target.checked)
  {
    duplicate_hide();
  }
  else
  {
    duplicate_show();
  }
}
</script>